@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix hydra: <https://www.w3.org/ns/hydra/core#>.
@prefix void: <http://rdfs.org/ns/void#>.
@prefix vann: <http://purl.org/vocab/vann/>.
@prefix dct: <http://purl.org/dc/terms/>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix sd: <http://www.w3.org/TR/sparql11-service-description/#>.
@prefix doap: <http://usefulinc.com/ns/doap#>.
@prefix lsdc: <http://linkedsoftwaredependencies.org/vocabulary/components#>.
@prefix om: <http://linkedsoftwaredependencies.org/vocabulary/object-mapping#>.

# ---------------------------------------- Metadata ----------------------------------------------

<http://linkedsoftwaredependencies.org/vocabulary/components#>
    a owl:Ontology;
    vann:preferredNamespacePrefix "lsdc";
    vann:preferredNamespaceUri "http://linkedsoftwaredependencies.org/vocabulary/components#";
    rdfs:label "Linked Software Dependencies Components."@en;
    rdfs:comment "RDF vocabulary for describing Linked Software Dependency Components."@en;
    dct:title "Linked Software Dependency Components"@en;
    dct:issued "2017-04-08"^^xsd:date;
    dct:modified "2017-04-08"^^xsd:date;
    dct:creator [foaf:mbox "Ruben.Taelman@UGent.be"; foaf:name "Ruben Taelman"; owl:sameAs <http://rubensworks.net/#me>].

# ------------------------------------------ Classes --------------------------------------------

lsdc:Module a rdfs:Class;
    rdfs:label "Module"@en;
    owl:sameAs doap:Version;
    rdfs:comment "A module can have several instantiatable components"@en;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>.

lsdc:Component a rdfs:Class;
    rdfs:label "Component"@en;
    rdfs:comment "A component is an instance or a class that can be instantiated based on parameters."@en;
    rdfs:subClassOf rdfs:Class;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>.

lsdc:ComponentConstructable a rdfs:Class;
    rdfs:label "Constructable Component"@en;
    rdfs:comment "A constructable component is a class that can be instantiated based on parameters."@en;
    rdfs:subClassOf lsdc:Component;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>.

lsdc:ComponentConstructableAbstract a rdfs:Class;
    rdfs:label "Abstract Constructable Component"@en;
    rdfs:comment "An abstract constructable component is an abstract class that can have subclassed that can be instantiated based on parameters."@en;
    rdfs:subClassOf lsdc:Component;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>.

lsdc:ComponentInstance a rdfs:Class;
    rdfs:label "Instance Component"@en;
    rdfs:comment "An instance component is an instance."@en;
    rdfs:subClassOf lsdc:Component;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>.

lsdc:Parameter a rdfs:Class;
    rdfs:label "Parameter"@en;
    rdfs:comment "Parameters are used to instantiate components."@en;
    rdfs:subClassOf rdfs:Property, om:ObjectMap;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>.

# ---------------------------------------- Properties --------------------------------------------

lsdc:hasComponent a rdf:Property;
    rdfs:label "has component"@en;
    rdfs:comment "Indicates that the subject module contains the object component that can be instantiated."@en;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>;
    rdfs:domain lsdc:Module;
    rdfs:range lsdc:Component.

lsdc:hasParameter a rdf:Property;
    rdfs:label "has parameter"@en;
    rdfs:comment "The subject component has the object parameter that can be used in its configuration."@en;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>;
    rdfs:subPropertyOf rdf:predicate;
    rdfs:domain lsdc:Component;
    rdfs:range lsdc:Parameter.

lsdc:arguments a rdf:Property;
    rdfs:label "has arguments"@en;
    rdfs:comment "The given function arguments must be mapped according to the given array mapping."@en;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>;
    rdfs:range om:ArrayMap.

lsdc:constructorArguments a rdf:Property;
    rdfs:subPropertyOf lsdc:arguments;
    rdfs:label "has constructor arguments"@en;
    rdfs:comment "The parameter values of the given component's constructor must be mapped according to the given object mapper."@en;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>;
    rdfs:domain lsdc:ComponentConstructable;
    rdfs:range om:ArrayMap.

lsdc:parameterUnique a rdf:Property;
    rdfs:label "unique"@en;
    rdfs:comment "If the parameter should have at most one value."@en;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>;
    rdfs:domain lsdc:Parameter;
    rdfs:range xsd:boolean.

lsdc:hasDefaultValue a rdf:Property;
    rdfs:label "default value"@en;
    rdfs:comment "The default value of the parameter."@en;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>;
    rdfs:domain lsdc:Parameter.

lsdc:hasFixedValue a rdf:Property;
    rdfs:label "fixed value"@en;
    rdfs:comment "The parameter value that is always present on each component instance."@en;
    rdfs:isDefinedBy <http://linkedsoftwaredependencies.org/vocabulary/components#>;
    rdfs:domain lsdc:Parameter.
